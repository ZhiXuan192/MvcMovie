@model MvcMovie.Models.MovieGenreViewModel

@{
    ViewData["Title"] = "Index";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1 class="fw-bold text-primary">Movies</h1>
    <a asp-action="Create" class="btn btn-success">
        <i class="bi bi-plus-lg"></i> Create New
    </a>
</div>

<div class="card shadow-sm mb-4">
    <div class="card-body">
        <form asp-controller="Movies" asp-action="Index" method="get" class="row g-3 align-items-end">
            <div class="col-md-3">
                <label asp-for="MovieGenre" class="form-label">Genre</label>
                <select asp-for="MovieGenre" asp-items="Model.Genres" class="form-select">
                    <option value="">All</option>
                </select>
            </div>
            <div class="col-md-3">
                <label for="searchString" class="form-label">Title</label>
                <input type="text" name="searchString" id="searchString" value="@Model.SearchString" class="form-control" placeholder="Search by title" />
            </div>
            <div class="col-md-3">
                <label for="directorString" class="form-label">Director</label>
                <input type="text" name="directorString" id="directorString" value="@Model.DirectorString" class="form-control" placeholder="Search by director" />
            </div>
            <div class="col-md-3 d-grid">
                <button type="submit" class="btn btn-primary">
                    <i class="bi bi-funnel"></i> Filter
                </button>
            </div>
        </form>
    </div>
</div>

<div class="table-responsive">
    <table class="table table-hover table-bordered align-middle shadow-sm">
        <thead class="table-primary">
            <tr>
                <th>@Html.DisplayNameFor(model => model.Movies![0].Title)</th>
                <th>@Html.DisplayNameFor(model => model.Movies![0].ReleaseDate)</th>
                <th>@Html.DisplayNameFor(model => model.Movies![0].Genre)</th>
                <th>@Html.DisplayNameFor(model => model.Movies![0].Price)</th>
                <th>@Html.DisplayNameFor(Model => Model.Movies![0].Rating)</th>
                <th>@Html.DisplayNameFor(Model => Model.Movies![0].Director)</th>
                <th class="text-center">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Movies!)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.Title)</td>
                    <td>@Html.DisplayFor(modelItem => item.ReleaseDate)</td>
                    <td>@Html.DisplayFor(modelItem => item.Genre)</td>
                    <td>@Html.DisplayFor(modelItem => item.Price)</td>
                    <td>@Html.DisplayFor(modelItem => item.Rating)</td>
                    <td>@Html.DisplayFor(modelItem => item.Director)</td>
                    <td class="text-center">
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-warning me-1">
                            <i class="bi bi-pencil"></i> Edit
                        </a>
                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-info me-1">
                            <i class="bi bi-info-circle"></i> Details
                        </a>
                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger">
                            <i class="bi bi-trash"></i> Delete
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>